/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.City;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Data;
import model.city.City;
import model.city.Community;

/**
 *
 * @author adityaraj
 */
public class CommunityPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommunityPanel
     */
    Data d;
    public CommunityPanel(Data d) {
        initComponents();
        this.d = d;
        populateCities();
        populateCommunitiesTable();
        txtCommunityId.setEditable(false);
        jComboBoxCities.setSelectedItem(null);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblCommunities = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCommunityId = new javax.swing.JTextField();
        lblCommunityName = new javax.swing.JLabel();
        txtCommunityName = new javax.swing.JTextField();
        lblCommunityCity = new javax.swing.JLabel();
        jComboBoxCities = new javax.swing.JComboBox<>();
        btnSaveCommunity = new javax.swing.JButton();
        btnUpdateCommunity = new javax.swing.JButton();
        btnViewCommunity = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 255));

        tblCommunities.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Community ID", "Community Name", "Community City"
            }
        ));
        jScrollPane2.setViewportView(tblCommunities);

        jLabel2.setFont(new java.awt.Font("Charter", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setText("Community Directory");

        jLabel5.setFont(new java.awt.Font("Charter", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 102));
        jLabel5.setText("Community Id");

        lblCommunityName.setFont(new java.awt.Font("Charter", 1, 14)); // NOI18N
        lblCommunityName.setForeground(new java.awt.Color(0, 0, 102));
        lblCommunityName.setText("Community Name");

        lblCommunityCity.setFont(new java.awt.Font("Charter", 1, 14)); // NOI18N
        lblCommunityCity.setForeground(new java.awt.Color(0, 0, 102));
        lblCommunityCity.setText("Community City");

        btnSaveCommunity.setBackground(new java.awt.Color(204, 255, 204));
        btnSaveCommunity.setFont(new java.awt.Font("Charter", 1, 14)); // NOI18N
        btnSaveCommunity.setForeground(new java.awt.Color(0, 0, 102));
        btnSaveCommunity.setText("Save Community");
        btnSaveCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCommunityActionPerformed(evt);
            }
        });

        btnUpdateCommunity.setBackground(new java.awt.Color(204, 255, 204));
        btnUpdateCommunity.setFont(new java.awt.Font("Charter", 1, 14)); // NOI18N
        btnUpdateCommunity.setForeground(new java.awt.Color(0, 0, 102));
        btnUpdateCommunity.setText("Update Community");
        btnUpdateCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCommunityActionPerformed(evt);
            }
        });

        btnViewCommunity.setBackground(new java.awt.Color(204, 255, 204));
        btnViewCommunity.setFont(new java.awt.Font("Charter", 1, 14)); // NOI18N
        btnViewCommunity.setForeground(new java.awt.Color(0, 0, 102));
        btnViewCommunity.setText("View Community");
        btnViewCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCommunityActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Charter", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("View Community");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnViewCommunity)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(239, 239, 239)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCommunityName)
                                            .addComponent(jLabel5))
                                        .addGap(68, 68, 68)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtCommunityName)
                                            .addComponent(jComboBoxCities, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtCommunityId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSaveCommunity)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdateCommunity))
                                    .addComponent(lblCommunityCity)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(66, 66, 66)
                                        .addComponent(jLabel2))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnViewCommunity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCommunityId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommunityName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxCities, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommunityCity))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveCommunity)
                    .addComponent(btnUpdateCommunity))
                .addGap(52, 52, 52))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCommunityActionPerformed
        // TODO add your handling code here:

        if(jComboBoxCities.getSelectedItem()==null || txtCommunityName.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Enter All Fields");
            return;
        }
        City c = (City)jComboBoxCities.getSelectedItem();

        String communityName = txtCommunityName.getText();
        if(communityName.length()==0){
            JOptionPane.showMessageDialog(this, "Enter Community Name");
            return;
        }
        int v = d.addCommunity(c.getId(), communityName);

        if(v==0){
            JOptionPane.showMessageDialog(this, "Error in creating Community");
            return;
        }

        txtCommunityName.setText("");
        jComboBoxCities.setSelectedItem(null);
        JOptionPane.showMessageDialog(this, "Community Info Saved");
        populateCommunitiesTable();
    }//GEN-LAST:event_btnSaveCommunityActionPerformed

    private void btnUpdateCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCommunityActionPerformed
        // TODO add your handling code here:
        
        /*
        try{
            
            if(txtCityId.getText().length() == 0 || txtCityName.getText().length()==0 || txtCityState.getText().length()==0){
                JOptionPane.showMessageDialog(this, "Enter All fields");
                return;
            }
            
           
            
            int v = data.updateCity(String.valueOf(txtCityId.getText()),String.valueOf(txtCityName.getText()),txtCityState.getText());
            if(v==0){
                JOptionPane.showMessageDialog(this, "Error in Updating City Data");
                return;
            }
            JOptionPane.showMessageDialog(this, "City Info Updated");
            txtCityId.setText("");
            txtCityName.setText("");
            txtCityState.setText("");
            populateCitiesTable();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Enter All fields");
            return;
        }
        populateCitiesTable();
        */
        if(txtCommunityName.getText().length()==0 || jComboBoxCities.getSelectedItem()==null){
            JOptionPane.showMessageDialog(this, "Enter All fields");
            return;
        }
        //City c = (City)jComboBoxCities.getSelectedItem();
        int v = d.updateCommunity(txtCommunityId.getText(),txtCommunityName.getText());
        if(v==0){
            JOptionPane.showMessageDialog(this, "Error in Updating community Data");
            return;
        }
            JOptionPane.showMessageDialog(this, "Community Info Updated");
        
        
        txtCommunityId.setText("");
        txtCommunityId.setEditable(false);
        txtCommunityName.setText("");
        txtCommunityName.setEditable(true);
        jComboBoxCities.setSelectedItem("");
        jComboBoxCities.setEditable(true);
        populateCommunitiesTable();
    }//GEN-LAST:event_btnUpdateCommunityActionPerformed

    private void btnViewCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCommunityActionPerformed
        // TODO add your handling code here:

        int selectedrowIndex = tblCommunities.getSelectedRow();
        if(selectedrowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select row to view the details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblCommunities.getModel();
        Community c = (Community) model.getValueAt(selectedrowIndex, 1);
        txtCommunityId.setText(String.valueOf(c.getCommunityId()));
        txtCommunityId.setEditable(false);
        txtCommunityName.setText(String.valueOf(c.getCommunityName()));
        txtCommunityName.setEditable(true);
        jComboBoxCities.setSelectedItem(c.getCity().getName());
        jComboBoxCities.setEditable(true);
    }//GEN-LAST:event_btnViewCommunityActionPerformed

    private void populateCities() {
        List<City> cities = d.getCities();
        jComboBoxCities.removeAllItems();
        for(City c : cities){
            jComboBoxCities.addItem(c);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveCommunity;
    private javax.swing.JButton btnUpdateCommunity;
    private javax.swing.JButton btnViewCommunity;
    private javax.swing.JComboBox<Object> jComboBoxCities;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCommunityCity;
    private javax.swing.JLabel lblCommunityName;
    private javax.swing.JTable tblCommunities;
    private javax.swing.JTextField txtCommunityId;
    private javax.swing.JTextField txtCommunityName;
    // End of variables declaration//GEN-END:variables

    private void populateCommunitiesTable() {
        DefaultTableModel model = (DefaultTableModel) tblCommunities.getModel();
        model.setRowCount(0);
        
        
        for(City c: d.getCities()){
            for(Community comm : c.getCommunityList()){
                Object[] row = new Object[3];
                row[0] = comm.getCommunityId();
                row[1] = comm;
                row[2] = comm.getCity().getName();
                model.addRow(row);
            }
            
        }
    }
}
